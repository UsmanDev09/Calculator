{"version":3,"sources":["containers/Main/Main.module.css","logo.svg","redux/reducers/reducer.js","redux/store.js","containers/Main/Main.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","appendSymbolToInputScreen","char","document","getElementById","innerHTML","appendSymbolToOutputScreen","calculate","operator","valueOne","valueTwo","intValueOne","parseInt","intValueTwo","console","log","reducer","state","action","finalResult","type","previousValue","index","currentValue","result","prev","cur","operatorClicked","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","getState","Main","props","clickHandler","bind","dispatch","id","styles","cover","style","backgroundColor","color","gridArea","direction","clear","onClick","this","clearScreen","zero","one","two","three","four","five","six","seven","eight","nine","decimal","equal","add","subtract","multiply","divide","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.8ab541b4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"cover\":\"Main_cover__3lnVy\",\"output\":\"Main_output__rhYJq\",\"input\":\"Main_input__Feswx\",\"clear\":\"Main_clear__3Qa8z\",\"divide\":\"Main_divide__1qHQd\",\"multiply\":\"Main_multiply__ttvCQ\",\"add\":\"Main_add__3aHFU\",\"subtract\":\"Main_subtract__1G9Qw\",\"equal\":\"Main_equal__3yZHC\",\"nine\":\"Main_nine__2mfTd\",\"eight\":\"Main_eight__20xuX\",\"seven\":\"Main_seven__DBra4\",\"six\":\"Main_six__2tCUX\",\"five\":\"Main_five__1nqHC\",\"four\":\"Main_four__3Levx\",\"three\":\"Main_three__U3UrU\",\"two\":\"Main_two__1axKQ\",\"one\":\"Main_one__Le8fH\",\"zero\":\"Main_zero__27TWR\"};","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","\r\n\r\n\r\nfunction clearScreen() {\r\n    document.getElementById(\"input\").innerHTML = \" \";\r\n    document.getElementById(\"output\").innerHTML = \" \";\r\n}\r\n\r\nfunction appendSymbolToInputScreen(char){\r\n    document.getElementById(\"input\").innerHTML = char;\r\n    \r\n}\r\n\r\nfunction appendSymbolToOutputScreen(char){\r\n    document.getElementById(\"output\").innerHTML = char;\r\n}\r\n\r\nfunction calculate(operator,valueOne,valueTwo){\r\n    let intValueOne = parseInt(valueOne);\r\n    let intValueTwo = parseInt(valueTwo);\r\n    console.log(\"intValueOne\",intValueOne);\r\n    console.log(\"intValueTwo\",intValueTwo);\r\n    let result;\r\n        switch(operator){\r\n            case '+':\r\n               return( intValueOne + intValueTwo)\r\n            \r\n            case '-':\r\n               result = intValueTwo - intValueOne;\r\n               \r\n               return result; \r\n            case '*':\r\n                result = intValueOne * intValueTwo;\r\n               \r\n                return result; \r\n            case '/':\r\n                result = intValueTwo / intValueOne;\r\n               \r\n                return result; \r\n            default:\r\n                return null;\r\n       }\r\n    \r\n    }\r\n\r\nconst reducer = (state, action) => {\r\n    let finalResult;\r\n    switch(action.type){\r\n     \r\n    case \"ADD\":\r\n        appendSymbolToInputScreen(action.operator);\r\n        appendSymbolToOutputScreen(state.previousValue + action.operator);\r\n        finalResult = action.index !== 1 ? calculate(state.operator,( state.currentValue),state.result):calculate(action.operator,( state.currentValue),0) ;\r\n        console.log(action.index);\r\n    return(  \r\n            {\r\n                previousValue :state.previousValue + action.operator,\r\n                currentValue : \"\",    \r\n                operator : action.operator,\r\n                result: finalResult,\r\n                index : action.index\r\n              \r\n            }\r\n    )\r\n\r\n    case \"SUBTRACT\":\r\n        appendSymbolToInputScreen(action.operator);\r\n        appendSymbolToOutputScreen(state.previousValue + action.operator);\r\n        finalResult = action.index !== 1 ? calculate(state.operator,( state.currentValue),state.result):calculate(action.operator,0,( state.currentValue)) ;\r\n    return(\r\n            {\r\n                previousValue :state.previousValue + action.operator ,\r\n                currentValue : \"\",\r\n                result : finalResult,\r\n                operator : action.operator,\r\n                index : action.index\r\n            }\r\n    )\r\n\r\n    case \"MULTIPLY\":\r\n        appendSymbolToInputScreen('*');\r\n        finalResult = action.index !== 1 ? calculate(state.operator,( state.currentValue),state.result):calculate(action.operator,1,( state.currentValue)) ;\r\n   \r\n    return(\r\n            {\r\n                previousValue :state.previousValue + action.operator ,    // on output screen\r\n                currentValue : \"\",\r\n                result : finalResult,\r\n                operator : action.operator,\r\n                index : action.index\r\n            }\r\n        \r\n    )\r\n\r\n    case \"DIVIDE\":\r\n     \r\n        appendSymbolToInputScreen('/');\r\n        finalResult = action.index !== 1 ? calculate(state.operator,( state.currentValue),state.result):calculate(action.operator,1,( state.currentValue)) ;\r\n    return(\r\n            {\r\n                previousValue :state.previousValue + action.operator ,    // on output screen\r\n                currentValue : \"\",\r\n                result : finalResult,\r\n                operator : action.operator,\r\n                index : action.index\r\n            }\r\n    )\r\n\r\n    case \"EQUAL\":\r\n      \r\n        appendSymbolToInputScreen(state.result);\r\n        finalResult = action.index !== 1 ? calculate(state.operator,( state.currentValue),state.result):calculate(action.operator,0,( state.currentValue)) ;\r\n    return(\r\n            {\r\n                operator: '=',\r\n                result : finalResult\r\n            }\r\n        \r\n    )\r\n\r\n    case \"CLEAR\":\r\n        clearScreen();\r\n    return(\r\n        {\r\n            ...state,\r\n        }\r\n        \r\n    )\r\n\r\n    case \"DIGITS\":\r\n        console.log(\"store.result\",state.result);\r\n            appendSymbolToInputScreen( state.previousValue+action.prev );\r\n            appendSymbolToOutputScreen( state.previousValue + action.prev );\r\n            \r\n        return(\r\n            {\r\n                currentValue : state.currentValue +  action.cur , //on input screen\r\n                previousValue : state.previousValue + action.prev ,\r\n                operator: state.operator,\r\n                operatorClicked: action.operatorClicked,\r\n                result : (state.operator === \"\" ) ?  (state.currentValue + action.cur)    : state.result,\r\n                index:action.index\r\n            } \r\n    )\r\n\r\n    default:\r\n\r\n        return state;\r\n}\r\n}\r\n\r\nexport default reducer;","import {createStore} from 'redux';\r\nimport reducer from './reducers/reducer';\r\n\r\nconst store = createStore(reducer,{previousValue:\"\",currentValue:\"\",operator:\"\",result:0,index:0}, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\r\n\r\nconsole.log(\"storeInitial\",store.getState());\r\nexport default store;\r\n","import React, {Component} from 'react';\r\nimport styles from './Main.module.css';\r\nimport store from '../../redux/store';\r\nclass Main extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        \r\n        this.clickHandler = this.clickHandler.bind(this);\r\n       \r\n    }\r\n    \r\n    \r\n    clickHandler( char){\r\n        switch(char){\r\n            case '+':\r\n                console.log(store.getState())\r\n             return (store.dispatch({\r\n                     type: \"ADD\",\r\n                        cur: \"\",\r\n                        operator : char,\r\n                        index: store.getState().index + 1\r\n                    }))\r\n\r\n            case '-':\r\n                    (store.dispatch({\r\n                     type: \"SUBTRACT\",\r\n                        operator: char,\r\n                        cur : \"\",\r\n                        index : store.getState().index  +1\r\n                    }))\r\n                    break;\r\n            case '*':\r\n                     (store.dispatch({\r\n                     type: \"MULTIPLY\",\r\n                        operator: char,\r\n                        cur : \"\",\r\n                        index: store.getState().index + 1\r\n                    }))\r\n                    break;\r\n            case '/':\r\n                    (store.dispatch({ \r\n                     type: \"DIVIDE\",  \r\n                        operator: char,\r\n                        cur : \"\",\r\n                        index: store.getState().index + 1\r\n                    }))\r\n                    break;\r\n            case '=':\r\n                \r\n                    (store.dispatch({\r\n                        type: \"EQUAL\",\r\n                        cur: \"\",\r\n                        operator: char\r\n                       \r\n                    }))\r\n                    break;\r\n            case \"0\":\r\n            case \"1\":\r\n            case \"2\":\r\n            case \"3\":\r\n            case \"4\":\r\n            case \"5\":\r\n            case \"6\":\r\n            case \"7\":\r\n            case \"8\":\r\n            case \"9\":\r\n            case \".\":\r\n                store.dispatch({\r\n                    type: \"DIGITS\",\r\n                    prev: char,\r\n                    cur : char,\r\n                    operatorClicked: false  ,\r\n                    index : store.getState().index          \r\n                })\r\n            break;\r\n              \r\n            default:\r\n                return null;\r\n            }\r\n            if(store.getState().operator === \"=\"){\r\n                document.getElementById('input').innerHTML = store.getState().result; \r\n            }\r\n        }\r\n        \r\n    clearScreen(){\r\n        return(store.dispatch({\r\n            type: \"CLEAR\"\r\n        }))\r\n    }\r\n\r\n    render() {\r\n\r\n        return(\r\n            <div id = {styles.cover} >\r\n               <div style = {{ backgroundColor: 'black', color: 'white', gridArea: 'output'}}>\r\n                   <p id = \"output\"  style = {{direction:\"rtl\"}}></p>\r\n               </div>\r\n               <div style = {{ backgroundColor: 'black', color: 'white', gridArea: 'input'}}>\r\n                   <p id = \"input\"  style = {{direction:\"rtl\"}}></p>\r\n               </div>\r\n               <button  id = {styles.clear} onClick = {this.clearScreen}>AC</button>\r\n               <button id = {styles.zero} onClick = {() =>this.clickHandler('0')}>0</button>\r\n               <button id = {styles.one} onClick = {() =>this.clickHandler('1')} >1</button>\r\n               <button id = {styles.two} onClick = {() =>this.clickHandler('2')}>2</button>\r\n               <button id = {styles.three} onClick = {() =>this.clickHandler('3')}>3</button>\r\n               <button id = {styles.four} onClick = {() =>this.clickHandler('4')}>4</button>\r\n               <button id = {styles.five} onClick = {() =>this.clickHandler('5')}>5</button>\r\n               <button id = {styles.six} onClick = {() =>this.clickHandler('6')}>6</button>\r\n               <button id = {styles.seven} onClick = {() =>this.clickHandler('7')}>7</button>\r\n               <button id = {styles.eight} onClick = {() =>this.clickHandler('8')}>8</button>\r\n               <button id = {styles.nine} onClick = {() =>this.clickHandler('9')}>9</button>\r\n               <button id = {styles.decimal} onClick = {() =>this.clickHandler('.')}>.</button>\r\n               <button id = {styles.equal} onClick = {() =>this.clickHandler('=')}>=</button>\r\n               <button id = {styles.add} onClick = {() =>this.clickHandler('+')}>+</button>\r\n               <button id = {styles.subtract} onClick = {() =>this.clickHandler('-')}>-</button>\r\n               <button id = {styles.multiply} onClick = {() =>this.clickHandler('*')}>*</button>\r\n               <button id = {styles.divide} onClick = {() =>this.clickHandler('/')}>/</button>\r\n               \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Main","import React, {Component} from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Main from './containers/Main/Main';\nclass App extends Component{\n  render() {\n    return(\n      <Main></Main>\n    )\n  }\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}