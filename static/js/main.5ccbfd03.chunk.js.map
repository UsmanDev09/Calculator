{"version":3,"sources":["containers/Main/Main.module.css","logo.svg","redux/reducers/reducer.js","redux/store.js","containers/Main/Main.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","appendSymbolToOutputScreen","char","document","getElementById","innerHTML","calculate","operator","valueOne","valueTwo","intValueOne","parseInt","intValueTwo","console","log","reducer","state","action","finalResult","type","previousValue","currentValue","index","result","operatorClicked","cur","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","getState","Main","props","clickHandler","bind","inputScreen","dispatch","prev","digit","this","setState","id","styles","cover","value","style","backgroundColor","color","gridArea","direction","clear","onClick","clearScreen","zero","changeInputScreen","one","two","three","four","five","six","seven","eight","nine","decimal","equal","add","subtract","multiply","divide","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,MAAQ,oBAAoB,OAAS,qBAAqB,MAAQ,oBAAoB,MAAQ,oBAAoB,OAAS,qBAAqB,SAAW,uBAAuB,IAAM,kBAAkB,SAAW,uBAAuB,MAAQ,oBAAoB,KAAO,mBAAmB,MAAQ,oBAAoB,MAAQ,oBAAoB,IAAM,kBAAkB,KAAO,mBAAmB,KAAO,mBAAmB,MAAQ,oBAAoB,IAAM,kBAAkB,IAAM,kBAAkB,KAAO,qB,oKCD5f,I,2CCSf,SAASC,EAA2BC,GAChCC,SAASC,eAAe,UAAUC,UAAYH,EAGlD,SAASI,EAAUC,EAASC,EAASC,GACjC,IAAIC,EAAcC,SAASH,GACvBI,EAAcD,SAASF,GAGvB,OAAOF,GACH,IAAK,IACF,OAAQG,EAAcE,EAEzB,IAAK,IAGF,OAFSA,EAAcF,EAG1B,IAAK,IAID,OAHAG,QAAQC,IAAI,OAAOJ,EAAcE,GACxBF,EAAcE,EAG3B,IAAK,IAGD,OAFSA,EAAcF,EAG3B,QACI,OAAO,MAKvB,IA8HeK,EA9HC,SAACC,EAAOC,GACpB,IAAIC,EACJ,OAAOD,EAAOE,MAEd,IAAK,MAOL,OALIlB,EAA4BgB,EAAOV,UAEnCW,EADAD,EAAOG,eAAyC,KAAxBH,EAAOI,aACjB,EACiB,IAAjBJ,EAAOK,MAAchB,EAA6B,MAAnBU,EAAMT,SAAkBU,EAAOV,SAAWS,EAAMT,SAA6B,MAAnBS,EAAMT,SAAmB,EAAES,EAAMK,aAAaL,EAAMO,QAAQjB,EAAUW,EAAOV,SAAWS,EAAMK,aAAc,GAEvN,2BAEeL,GAFf,IAGYI,cAAgBJ,EAAMI,cACtBC,aAAeL,EAAMI,eAAwC,KAAvBJ,EAAMK,aAAsBJ,EAAOV,SAAU,GACnFA,SAAWU,EAAOV,SAClBgB,OAAQL,EACRI,MAAQL,EAAOK,QAK3B,IAAK,WAIL,OAFIrB,EAA4BgB,EAAOV,UACnCW,EAA+B,IAAjBD,EAAOK,MAAchB,EAA6B,MAAnBU,EAAMT,SAAkBU,EAAOV,SAAWS,EAAMT,SAA4B,MAAnBS,EAAMT,SAAmB,EAAES,EAAMK,aAAaL,EAAMO,QAAQjB,EAAUW,EAAOV,SAAS,EAAIS,EAAMK,cAC1M,2BAEeL,GAFf,IAGYI,cAAgBJ,EAAMI,cACtBC,aAAuC,KAAxBL,EAAMI,eAA+C,KAAvBJ,EAAMK,aAAsBJ,EAAOV,SAAU,GAC1FgB,OAASL,EACTX,SAAWU,EAAOV,SAClBe,MAAgC,KAAxBN,EAAMI,eAA+C,KAAvBJ,EAAMK,aAAsB,EAAEJ,EAAOK,QAIvF,IAAK,WAIL,OAHIrB,EAA2BgB,EAAOV,UAClCW,EAA+B,IAAjBD,EAAOK,MAAchB,EAA6B,MAAnBU,EAAMT,SAAkBU,EAAOV,SAAWS,EAAMT,SAA4B,MAAnBS,EAAMT,SAAmB,EAAES,EAAMK,aAAaL,EAAMO,QAAQjB,EAAUW,EAAOV,SAAS,EAAIS,EAAMO,QACtMV,QAAQC,IAAI,IAAIR,EAAUW,EAAOV,SAAWS,EAAMK,aAAcL,EAAMO,SAC1E,2BAEcP,GAFd,IAGYI,cAAeJ,EAAMI,cACrBC,aAAeJ,EAAOG,eAAyC,KAAxBH,EAAOI,aAAsBJ,EAAOV,SAAU,GACrFgB,OAASL,EACTX,SAAWU,EAAOV,SAClBe,MAAQL,EAAOK,QAK3B,IAAK,SAIL,OAFIrB,EAA2BgB,EAAOV,UAClCW,EAA+B,IAAjBD,EAAOK,MAAchB,EAA6B,MAAnBU,EAAMT,SAAkBU,EAAOV,SAAWS,EAAMT,SAA4B,MAAnBS,EAAMT,SAAmB,EAAES,EAAMK,aAAaL,EAAMO,QAAQjB,EAAUW,EAAOV,SAAS,EAAIS,EAAMK,cAC1M,2BAEeL,GAFf,IAGYI,cAAeJ,EAAMI,cACrBC,aAAeJ,EAAOG,eAAyC,KAAxBH,EAAOI,aAAsBJ,EAAOV,SAAU,GACrFgB,OAASL,EACTX,SAAWU,EAAOV,SAClBe,MAAQL,EAAOK,QAI3B,IAAK,QAML,OADIrB,EADAiB,EAAeZ,EAAUU,EAAMT,SAAWS,EAAMK,aAAcL,EAAMO,SAExE,2BAEeP,GAFf,IAGYT,SAAU,IACViB,iBAAkB,EAClBD,OAASL,EAETG,aAAe,IAK3B,IAAK,QAEL,OA9HAlB,SAASC,eAAe,UAAUC,UAAY,IA8H9C,2BAEWW,GAFX,IAGQI,cAAc,GACdC,aAAa,GACbd,SAAS,GACTgB,OAAO,EACPD,MAAM,IAKd,IAAK,SAMD,OALAT,QAAQC,IAAI,eAAeE,EAAMO,QAE7BtB,EAA4Be,EAAMK,aAAeJ,EAAOQ,KAIxD,CACIJ,aAAeL,EAAMK,aAAgBJ,EAAOQ,IAE5ClB,SAAUS,EAAMT,SAChBiB,gBAAiBP,EAAOO,gBACxBD,OAA6B,KAAnBP,EAAMT,SAAsBS,EAAMK,aAAeJ,EAAOQ,IAAUT,EAAMO,OAElFD,MAAML,EAAOK,MACbF,cAAgBH,EAAOK,MAAO,EAAGN,EAAMO,OAAQ,IAI3D,QAEI,OAAOP,IChKTU,EAAQC,YAAYZ,EAAQ,CAACK,cAAc,GAAGC,aAAa,GAAGd,SAAS,GAAGgB,OAAO,EAAED,MAAM,GAAIM,OAAOC,8BAAgCD,OAAOC,gCAEjJhB,QAAQC,IAAI,eAAeY,EAAMI,YAClBJ,QCoLAK,E,kDAtLX,WAAYC,GAAO,IAAD,8BACd,cAAMA,IAEDC,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKlB,MAAQ,CACTmB,YAAa,IALH,E,yDAUJjC,GACV,OAAOA,GACH,IAAK,IAEJ,OADGW,QAAQC,IAAIY,EAAMI,YACbJ,EAAMU,SAAS,CACfjB,KAAM,MACHM,IAAK,GACLlB,SAAWL,EACXoB,MAAOI,EAAMI,WAAWR,MAAQ,IAG5C,IAAK,IACII,EAAMU,SAAS,CACfjB,KAAM,WACHZ,SAAUL,EACVuB,IAAM,GACNH,MAAQI,EAAMI,WAAWR,MAAQ,IAErC,MACR,IAAK,IACKI,EAAMU,SAAS,CAChBjB,KAAM,WACHZ,SAAUL,EACVuB,IAAM,GACNH,MAAOI,EAAMI,WAAWR,MAAQ,IAEpC,MACR,IAAK,IACII,EAAMU,SAAS,CACfjB,KAAM,SACHZ,SAAUL,EACVuB,IAAM,GACNH,MAAOI,EAAMI,WAAWR,MAAQ,IAEpC,MACR,IAAK,IAEII,EAAMU,SAAS,CACZjB,KAAM,QACNM,IAAK,GACLlB,SAAUL,IAGd,MACR,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACDwB,EAAMU,SAAS,CACXjB,KAAM,SACNkB,KAAMnC,EACNuB,IAAMvB,EACNsB,iBAAiB,EACjBF,MAAQI,EAAMI,WAAWR,QAEjC,MAEA,QACI,OAAO,Q,kCAKPgB,GACTC,KAAKC,SAAS,CACVL,YAAcG,IAElBZ,EAAMU,SACF,CACIjB,KAAM,Y,wCAICmB,GACD,MAAVA,EACHC,KAAKC,SAAS,CACVL,YAAaI,KAAKvB,MAAMmB,YAAcG,EAAQZ,EAAMI,WAAWP,SAGnEgB,KAAKC,SAAS,CACVL,YAAaI,KAAKvB,MAAMmB,YAAcG,M,+BAIpC,IAAD,OAEL,OACI,sBAAKG,GAAMC,IAAOC,MAAlB,UACG,uBAAQC,MAASL,KAAKvB,MAAMmB,YAAaU,MAAS,CAAEC,gBAAiB,QAASC,MAAO,QAASC,SAAU,YAGxG,qBAAKH,MAAS,CAAEC,gBAAiB,QAASC,MAAO,QAASC,SAAU,SAApE,SACI,mBAAGP,GAAK,SAAUI,MAAS,CAACI,UAAU,WAE1C,wBAASR,GAAMC,IAAOQ,MAAQC,QAAW,kBAAM,EAAKC,YAAY,KAAhE,gBACA,wBAAQX,GAAMC,IAAOW,KAAMF,QAAW,WAClC,EAAKlB,aAAa,KACjB,EAAKqB,kBAAkB,MAF5B,eAIA,wBAAQb,GAAMC,IAAOa,IAAKJ,QAAW,WACjC,EAAKlB,aAAa,KAClB,EAAKqB,kBAAkB,MAF3B,eAIA,wBAAQb,GAAMC,IAAOc,IAAKL,QAAW,WAChC,EAAKlB,aAAa,KAClB,EAAKqB,kBAAkB,MAF5B,eAIA,wBAAQb,GAAMC,IAAOe,MAAON,QAAW,WACnC,EAAKlB,aAAa,KAClB,EAAKqB,kBAAkB,MAF3B,eAIA,wBAAQb,GAAMC,IAAOgB,KAAMP,QAAW,WAClC,EAAKlB,aAAa,KAClB,EAAKqB,kBAAkB,MAF3B,eAIA,wBAAQb,GAAMC,IAAOiB,KAAMR,QAAW,WAClC,EAAKlB,aAAa,KAClB,EAAKqB,kBAAkB,MAF3B,eAIA,wBAAQb,GAAMC,IAAOkB,IAAKT,QAAW,WACjC,EAAKlB,aAAa,KAClB,EAAKqB,kBAAkB,MAF3B,eAIA,wBAAQb,GAAMC,IAAOmB,MAAOV,QAAW,WACnC,EAAKlB,aAAa,KAClB,EAAKqB,kBAAkB,MAF3B,eAIA,wBAAQb,GAAMC,IAAOoB,MAAOX,QAAW,WAClC,EAAKlB,aAAa,KAClB,EAAKqB,kBAAkB,MAF5B,eAIA,wBAAQb,GAAMC,IAAOqB,KAAMZ,QAAW,WAClC,EAAKlB,aAAa,KAClB,EAAKqB,kBAAkB,MAF3B,eAIA,wBAAQb,GAAMC,IAAOsB,QAASb,QAAW,WACrC,EAAKlB,aAAa,KAClB,EAAKqB,kBAAkB,MAF3B,eAIA,wBAAQb,GAAMC,IAAOuB,MAAOd,QAAW,WACnC,EAAKlB,aAAa,KAClB,EAAKqB,kBAAkB,MAF3B,eAIA,wBAAQb,GAAMC,IAAOwB,IAAKf,QAAW,WACjC,EAAKlB,aAAa,KAClB,EAAKqB,kBAAkB,MAF3B,eAIA,wBAAQb,GAAMC,IAAOyB,SAAUhB,QAAW,WACtC,EAAKlB,aAAa,KAClB,EAAKqB,kBAAkB,MAF3B,eAIA,wBAAQb,GAAMC,IAAO0B,SAAUjB,QAAW,WACtC,EAAKlB,aAAa,KAClB,EAAKqB,kBAAkB,MAF3B,eAIA,wBAAQb,GAAMC,IAAO2B,OAAQlB,QAAW,WACpC,EAAKlB,aAAa,KAClB,EAAKqB,kBAAkB,MAF3B,sB,GA7KIgB,aCUJC,E,uKAPX,OACE,cAAC,EAAD,Q,GAHYD,aCQHE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFhF,SAASC,eAAe,SAM1BoE,M","file":"static/js/main.5ccbfd03.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"cover\":\"Main_cover__3lnVy\",\"output\":\"Main_output__rhYJq\",\"input\":\"Main_input__Feswx\",\"clear\":\"Main_clear__3Qa8z\",\"divide\":\"Main_divide__1qHQd\",\"multiply\":\"Main_multiply__ttvCQ\",\"add\":\"Main_add__3aHFU\",\"subtract\":\"Main_subtract__1G9Qw\",\"equal\":\"Main_equal__3yZHC\",\"nine\":\"Main_nine__2mfTd\",\"eight\":\"Main_eight__20xuX\",\"seven\":\"Main_seven__DBra4\",\"six\":\"Main_six__2tCUX\",\"five\":\"Main_five__1nqHC\",\"four\":\"Main_four__3Levx\",\"three\":\"Main_three__U3UrU\",\"two\":\"Main_two__1axKQ\",\"one\":\"Main_one__Le8fH\",\"zero\":\"Main_zero__27TWR\"};","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","// if action.index === 1 then multiply divide with 1 else (previousNumber previousOperator currentNumver)\r\n\r\n\r\nfunction clearScreen() {\r\n    document.getElementById(\"output\").innerHTML = \" \";\r\n  \r\n}\r\n\r\n\r\nfunction appendSymbolToOutputScreen(char){\r\n    document.getElementById(\"output\").innerHTML = char;\r\n}\r\n\r\nfunction calculate(operator,valueOne,valueTwo){\r\n    let intValueOne = parseInt(valueOne);\r\n    let intValueTwo = parseInt(valueTwo);\r\n    \r\n    let result;\r\n        switch(operator){\r\n            case '+':\r\n               return( intValueOne + intValueTwo)\r\n            \r\n            case '-':\r\n               result = intValueTwo - intValueOne;\r\n               \r\n               return result; \r\n            case '*':\r\n                console.log(\"?mul\",intValueOne * intValueTwo)\r\n                result = intValueOne * intValueTwo;\r\n               \r\n                return result; \r\n            case '/':\r\n                result = intValueTwo / intValueOne;\r\n               \r\n                return result; \r\n            default:\r\n                return null;\r\n       }\r\n    \r\n    }\r\n\r\nconst reducer = (state, action) => {\r\n    let finalResult;\r\n    switch(action.type){\r\n     \r\n    case \"ADD\":\r\n    \r\n        appendSymbolToOutputScreen( action.operator);\r\n        action.previousValue && action.currentValue === \"\"  ? \r\n        finalResult = 0: \r\n        finalResult = action.index !== 1 ? calculate(state.operator === \"=\"? action.operator : state.operator, state.operator === \"=\" ? 0:state.currentValue,state.result):calculate(action.operator,( state.currentValue),0) ;\r\n      \r\n    return(  \r\n            {\r\n                ...state,\r\n                previousValue : state.previousValue ,\r\n                currentValue : state.previousValue && state.currentValue === \"\" ? action.operator: \"\",    \r\n                operator : action.operator,\r\n                result: finalResult,\r\n                index : action.index\r\n              \r\n            }\r\n    )\r\n\r\n    case \"SUBTRACT\":\r\n        \r\n        appendSymbolToOutputScreen( action.operator);\r\n        finalResult = action.index !== 1 ? calculate(state.operator === \"=\"? action.operator : state.operator,state.operator === \"=\" ? 0:state.currentValue,state.result):calculate(action.operator,0,( state.currentValue)) ;\r\n    return(\r\n            {\r\n                ...state,\r\n                previousValue : state.previousValue ,\r\n                currentValue : state.previousValue === \"\" && state.currentValue === \"\" ? action.operator: \"\", \r\n                result : finalResult,\r\n                operator : action.operator,\r\n                index : state.previousValue === \"\" && state.currentValue === \"\" ? 0:action.index\r\n            }\r\n    )\r\n\r\n    case \"MULTIPLY\":\r\n        appendSymbolToOutputScreen(action.operator)\r\n        finalResult = action.index !== 1 ? calculate(state.operator === \"=\"? action.operator : state.operator,state.operator === \"=\" ? 1:state.currentValue,state.result):calculate(action.operator,1,( state.result)) ;\r\n        console.log(\"s\",calculate(action.operator,( state.currentValue),state.result));\r\n    return(\r\n            {\r\n               ...state,\r\n                previousValue :state.previousValue  ,    \r\n                currentValue : action.previousValue && action.currentValue === \"\" ? action.operator: \"\", \r\n                result : finalResult,\r\n                operator : action.operator,\r\n                index : action.index\r\n            }\r\n        \r\n    )\r\n\r\n    case \"DIVIDE\":\r\n     \r\n        appendSymbolToOutputScreen(action.operator)\r\n        finalResult = action.index !== 1 ? calculate(state.operator === \"=\"? action.operator : state.operator,state.operator === \"=\" ? 1:state.currentValue,state.result):calculate(action.operator,1,( state.currentValue)) ;\r\n    return(\r\n            {\r\n                ...state,\r\n                previousValue :state.previousValue  ,    // on output screen\r\n                currentValue : action.previousValue && action.currentValue === \"\" ? action.operator: \"\", \r\n                result : finalResult,\r\n                operator : action.operator,\r\n                index : action.index\r\n            }\r\n    )\r\n\r\n    case \"EQUAL\":\r\n       \r\n       \r\n       \r\n        finalResult =  calculate(state.operator,( state.currentValue),state.result) ;\r\n        appendSymbolToOutputScreen(finalResult)\r\n    return(\r\n            {\r\n                ...state,\r\n                operator: '=',\r\n                operatorClicked : true,\r\n                result : finalResult,\r\n                \r\n                currentValue : 0\r\n            }\r\n        \r\n    )\r\n\r\n    case \"CLEAR\":\r\n        clearScreen();\r\n    return(\r\n        {\r\n            ...state,\r\n            previousValue:\"\",\r\n            currentValue:\"\",\r\n            operator:\"\",\r\n            result:0,\r\n            index:0\r\n        }\r\n        \r\n    )\r\n\r\n    case \"DIGITS\":\r\n        console.log(\"store.result\",state.result);\r\n          \r\n            appendSymbolToOutputScreen( state.currentValue + action.cur );\r\n\r\n            \r\n        return(\r\n            {\r\n                currentValue : state.currentValue +  action.cur , //on input screen\r\n                \r\n                operator: state.operator,\r\n                operatorClicked: action.operatorClicked,\r\n                result : (state.operator === \"\" ) ?  (state.currentValue + action.cur)    : state.result,\r\n                \r\n                index:action.index,\r\n                previousValue : action.index> 0? state.result: \"\" \r\n            } \r\n    )\r\n\r\n    default:\r\n\r\n        return state;\r\n}\r\n}\r\n\r\nexport default reducer;","import {createStore} from 'redux';\r\nimport reducer from './reducers/reducer';\r\n\r\nconst store = createStore(reducer,{previousValue:\"\",currentValue:\"\",operator:\"\",result:0,index:0}, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\r\n\r\nconsole.log(\"storeInitial\",store.getState());\r\nexport default store;\r\n","import React, {Component,useState} from 'react';\r\nimport styles from './Main.module.css';\r\nimport store from '../../redux/store';\r\nclass Main extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        \r\n        this.clickHandler = this.clickHandler.bind(this);\r\n        this.state = {\r\n            inputScreen: ''\r\n        } \r\n    }\r\n    \r\n    \r\n    clickHandler( char){\r\n        switch(char){\r\n            case '+':\r\n                console.log(store.getState())\r\n             return (store.dispatch({\r\n                     type: \"ADD\",\r\n                        cur: \"\",\r\n                        operator : char,\r\n                        index: store.getState().index + 1\r\n                    }))\r\n\r\n            case '-':\r\n                    (store.dispatch({\r\n                     type: \"SUBTRACT\",\r\n                        operator: char,\r\n                        cur : \"\",\r\n                        index : store.getState().index  +1\r\n                    }))\r\n                    break;\r\n            case '*':\r\n                     (store.dispatch({\r\n                     type: \"MULTIPLY\",\r\n                        operator: char,\r\n                        cur : \"\",\r\n                        index: store.getState().index + 1\r\n                    }))\r\n                    break;\r\n            case '/':\r\n                    (store.dispatch({ \r\n                     type: \"DIVIDE\",  \r\n                        operator: char,\r\n                        cur : \"\",\r\n                        index: store.getState().index + 1\r\n                    }))\r\n                    break;\r\n            case '=':\r\n                \r\n                    (store.dispatch({\r\n                        type: \"EQUAL\",\r\n                        cur: \"\",\r\n                        operator: char\r\n                       \r\n                    }))\r\n                    break;\r\n            case \"0\":\r\n            case \"1\":\r\n            case \"2\":\r\n            case \"3\":\r\n            case \"4\":\r\n            case \"5\":\r\n            case \"6\":\r\n            case \"7\":\r\n            case \"8\":\r\n            case \"9\":\r\n            case \".\":\r\n                store.dispatch({\r\n                    type: \"DIGITS\",\r\n                    prev: char,\r\n                    cur : char,\r\n                    operatorClicked: false  ,\r\n                    index : store.getState().index          \r\n                })\r\n            break;\r\n              \r\n            default:\r\n                return null;\r\n            }\r\n           \r\n        }\r\n        \r\n    clearScreen(digit){\r\n       this.setState({\r\n           inputScreen : digit\r\n       })\r\n       store.dispatch(\r\n           {\r\n               type: \"CLEAR\"\r\n           }\r\n       )\r\n    }\r\n    changeInputScreen(digit){\r\n        if(digit === \"=\"){\r\n        this.setState({\r\n            inputScreen: this.state.inputScreen + digit + store.getState().result\r\n        })\r\n        }else{\r\n        this.setState({\r\n            inputScreen: this.state.inputScreen + digit\r\n        })\r\n        }   \r\n    }\r\n    render() {\r\n        \r\n        return(\r\n            <div id = {styles.cover} >\r\n               <input  value = {this.state.inputScreen} style = {{ backgroundColor: 'black', color: 'white', gridArea: 'output'}}>\r\n                   \r\n               </input>\r\n               <div style = {{ backgroundColor: 'black', color: 'white', gridArea: 'input'}}>\r\n                   <p id = \"output\"  style = {{direction:\"rtl\"}}></p>\r\n               </div>\r\n               <button  id = {styles.clear}  onClick = {() => this.clearScreen(\"\")}>AC</button>\r\n               <button id = {styles.zero} onClick = {() => {\r\n                   this.clickHandler('0')\r\n                    this.changeInputScreen('0')\r\n                }}>0</button>\r\n               <button id = {styles.one} onClick = {() => {\r\n                   this.clickHandler('1')\r\n                   this.changeInputScreen('1')   \r\n                }} >1</button>\r\n               <button id = {styles.two} onClick = {() =>{\r\n                    this.clickHandler('2')\r\n                    this.changeInputScreen('2')    \r\n                }}>2</button>\r\n               <button id = {styles.three} onClick = {() => {\r\n                   this.clickHandler('3')\r\n                   this.changeInputScreen('3')\r\n                }}>3</button>\r\n               <button id = {styles.four} onClick = {() => {\r\n                   this.clickHandler('4')\r\n                   this.changeInputScreen('4')\r\n                }}>4</button>\r\n               <button id = {styles.five} onClick = {() =>{\r\n                   this.clickHandler('5')\r\n                   this.changeInputScreen('5')   \r\n                }}>5</button>\r\n               <button id = {styles.six} onClick = {() => {\r\n                   this.clickHandler('6')\r\n                   this.changeInputScreen('6')\r\n                }}>6</button>\r\n               <button id = {styles.seven} onClick = {() => {\r\n                   this.clickHandler('7')\r\n                   this.changeInputScreen('7')\r\n                }}>7</button>\r\n               <button id = {styles.eight} onClick = {() =>{\r\n                    this.clickHandler('8')\r\n                    this.changeInputScreen('8')    \r\n                }}>8</button>\r\n               <button id = {styles.nine} onClick = {() =>{\r\n                   this.clickHandler('9')\r\n                   this.changeInputScreen('9')\r\n               }}>9</button>\r\n               <button id = {styles.decimal} onClick = {() =>{\r\n                   this.clickHandler('.')\r\n                   this.changeInputScreen('.')   \r\n                }}>.</button>\r\n               <button id = {styles.equal} onClick = {() => {\r\n                   this.clickHandler('=')\r\n                   this.changeInputScreen('=')\r\n                }}>=</button>\r\n               <button id = {styles.add} onClick = {() =>{\r\n                   this.clickHandler('+')\r\n                   this.changeInputScreen('+')\r\n                }}>+</button>\r\n               <button id = {styles.subtract} onClick = {() =>{\r\n                   this.clickHandler('-')\r\n                   this.changeInputScreen('-')\r\n                }}>-</button>\r\n               <button id = {styles.multiply} onClick = {() =>{\r\n                   this.clickHandler('*')\r\n                   this.changeInputScreen('*')\r\n                }}>*</button>\r\n               <button id = {styles.divide} onClick = {() =>{\r\n                   this.clickHandler('/')\r\n                   this.changeInputScreen('/')   \r\n                }}>/</button>\r\n               \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Main","import React, {Component} from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Main from './containers/Main/Main';\nclass App extends Component{\n  render() {\n    return(\n      <Main></Main>\n    )\n  }\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}